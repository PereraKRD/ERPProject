@using ERP.Domain.Core.Entity
@using ERP.Application.AcademicApp.Modules.Interfaces
@inject IGetStudentListByModuleOfferingUseCase GetStudentListByModuleOfferingUseCase
<h3>DisplayStudentList</h3>

<p>Relevant ModuleOfferingId is : @ModuleOfferingId</p>

@if (_students != null && _students.Any())
{
    <MudTable Items="@_students">
        <HeaderContent>
            <MudTh>Reg Number</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Action</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.RegistrationNum</MudTd>
            <MudTd DataLabel="Sign">@context.FirstName @context.LastName </MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd>
                            <MudIconButton Icon="@Icons.Material.Filled.Menu" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}
else
{
    <p>No students are enrolled in this module offering.</p>
}

@code {
    [Parameter] 
    public int ModuleOfferingId { get; set; }
    
    private List<Student> _students = new();

    protected override async Task OnInitializedAsync()
    {
        _students = await GetStudentListByModuleOfferingUseCase.ExecuteAsync(ModuleOfferingId);
    }
}